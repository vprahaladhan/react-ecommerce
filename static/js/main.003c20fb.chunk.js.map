{"version":3,"sources":["components/Home.js","components/Cart.js","components/ExpandableText.js","components/Card.js","components/Cards.js","components/Product.js","components/CartBadge.js","App.js","reportWebVitals.js","index.js"],"names":["Home","style","textAlign","position","top","Cart","cart","updateCart","clearCart","margin","Table","striped","bordered","hover","size","maxWidth","map","product","id","product_sku","title","DropdownButton","quantity","onSelect","eventkey","event","parseInt","target","innerText","Array","keys","item","Dropdown","Item","price","reduce","acc","value","Button","className","to","onClick","toast","success","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","styles","container","width","card","backgroundColor","borderRadius","padding","ExpandableText","maxHeight","children","ref","React","useRef","useState","shouldShowExpand","setShouldShowExpand","expanded","setExpanded","useEffect","current","scrollHeight","Card","Text","cardText","ProductCard","addToCart","Img","variant","src","image","alt","Body","Title","description","Footer","disabled","find","GlobalCss","withStyles","justifyContent","marginTop","Cards","products","page","setPage","Pagination","count","length","shape","onChange","CardDeck","slice","Product","useStyles","makeStyles","theme","root","spacing","font1","fontSize","font2","marginBottom","font3","CustomizedBadge","noOfItems","Badge","badgeContent","color","classes","badge","Icon","name","App","setProducts","setCart","queryCart","then","queryProducts","method","body","fetch","process","JSON","stringify","headers","Accept","response","json","concat","newCart","index","findIndex","prod","splice","Promise","all","class","as","Link","marginLeft","path","exact","render","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.003c20fb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Home = () => (\r\n  <div style={{textAlign: 'center', position: 'relative', top: '40vh'}}>\r\n    <h2>Welcome to ECOM - for all things online!</h2>\r\n  </div>\r\n);\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import { Table, Dropdown, Button } from 'rsuite';\r\nimport { Table, Button, Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n// import { Whisper, Icon, IconButton, Popover } from 'rsuite';\r\n\r\nconst Cart = ({ cart, updateCart, clearCart }) => {\r\n  const onCheckout = () => {\r\n    clearCart();\r\n    toast.success('Thank you, your order has been successfully processed!', {\r\n      position: \"top-right\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div style={{ margin: '2em' }}>\r\n      <ToastContainer />\r\n      <h2 style={{ textAlign: 'center' }}>SHOPPING CART</h2>\r\n      <br /><br />\r\n      <Table striped bordered hover size='sm' style={{maxWidth: '90%', margin: '0 auto'}}>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>SKU</th>\r\n            <th>Title</th>\r\n            <th>Quantity</th>\r\n            <th>Unit Price</th>\r\n            <th>Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {cart.map(product => (\r\n            <tr key={product.id}>\r\n              <td>{product.id}</td>\r\n              <td>{product.product_sku}</td>\r\n              <td>{product.title}</td>\r\n              <td>\r\n                <DropdownButton \r\n                  size='sm' \r\n                  title={product.quantity} \r\n                  onSelect={(eventkey, event) => updateCart(parseInt(event.target.innerText), product)}>\r\n                  {[...Array(11).keys()].map(item => <Dropdown.Item key={item}>{item}</Dropdown.Item>)}\r\n                </DropdownButton>\r\n              </td>\r\n              <td>${product.price}</td>\r\n              <td>${product.quantity * product.price}</td>\r\n            </tr>            \r\n          ))}\r\n          <tr>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td>\r\n              <strong>GRAND TOTAL</strong>\r\n            </td>\r\n            <td>\r\n              <strong>${cart.reduce((acc, value) => acc + (value.quantity * value.price), 0)}</strong>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n      <div id=\"cart-action-container\">\r\n        <Button className='cart-action'><Link to='/products'>Continue Shopping</Link></Button>\r\n        <Button className='cart-action' onClick={clearCart}>Clear Cart</Button>\r\n        <Button className='cart-action' onClick={onCheckout}>Checkout</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst MAX_POSSIBLE_HEIGHT = 500;\r\n\r\nconst styles = {\r\n  container: {\r\n    width: 300,\r\n    margin: \"0 auto\"\r\n  },\r\n  card: {\r\n    backgroundColor: \"#B7E0F2\",\r\n    borderRadius: 55,\r\n    padding: \"3rem\"\r\n  }\r\n};\r\n\r\nconst ExpandableText = ({ maxHeight, children }) => {\r\n  const ref = React.useRef();\r\n  const [shouldShowExpand, setShouldShowExpand] = React.useState(false);\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (ref.current.scrollHeight > maxHeight) {\r\n      setShouldShowExpand(true);\r\n      setExpanded(false);\r\n    }\r\n  }, [maxHeight]);\r\n\r\n  return (\r\n    <Card.Text style={styles.cardText} ref={ref}>\r\n      <div\r\n        className=\"inner\"\r\n        style={{ maxHeight: expanded ? MAX_POSSIBLE_HEIGHT : maxHeight }}\r\n      >\r\n        {children}\r\n      </div>\r\n      {shouldShowExpand && (\r\n        <button onClick={() => setExpanded(!expanded)}>{expanded ? 'Less...' : 'More...'}</button>\r\n      )}\r\n    </Card.Text>      \r\n  );\r\n};\r\n\r\nexport default ExpandableText;","import React from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Text from './ExpandableText';\r\n\r\nconst ProductCard = ({ product, addToCart, cart }) => (\r\n  <Card>\r\n    <Link to={`/products/${product.id}`}> \r\n      <Card.Img variant=\"top\" src={product.image} alt={product.title} className='card-img' />\r\n    </Link>\r\n    <Card.Body>\r\n      <Link to={`/products/${product.id}`}>\r\n        <Card.Title>{product.title}</Card.Title>\r\n      </Link>\r\n      <Text maxHeight={95}>{product.description}</Text>\r\n      <Card.Text>AUD {product.price}</Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <Button \r\n        disabled={cart.find(({ product_sku }) => product_sku === product.id)}\r\n        onClick={() => addToCart({\r\n          product_sku: product.id,\r\n          title: product.title,\r\n          quantity: 1,\r\n          price: product.price\r\n        })}\r\n      >\r\n        Add to cart\r\n      </Button>\r\n    </Card.Footer>\r\n  </Card>\r\n);\r\n\r\nexport default ProductCard;","import React from 'react';\r\nimport { CardDeck } from 'react-bootstrap';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Card from './Card';\r\n\r\nconst GlobalCss = withStyles({\r\n  // @global is handled by jss-plugin-global.\r\n  '@global': {\r\n    // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\r\n    '.MuiPagination-ul': {\r\n      justifyContent: 'center',\r\n      marginTop: '20px'\r\n    },\r\n  },\r\n})(() => null);\r\n\r\nconst Cards = ({ products, cart, addToCart }) => { \r\n  const [page, setPage] = React.useState(1);\r\n\r\n  return (\r\n    <div>\r\n      <GlobalCss />\r\n      <Pagination count={products.length / 4} shape=\"rounded\" onChange={(event, page) => setPage(page)} />\r\n      <CardDeck>\r\n        {products.slice((page - 1) * 4, page * 4).map(product => {\r\n            return <Card key={product.id} product={product} addToCart={addToCart} cart={cart} />\r\n          })\r\n        }\r\n      </CardDeck>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst Product = ({ product }) => (\r\n  <Card style={{textAlign: 'center'}}>\r\n    <Card.Img variant=\"top\" src={product.image} alt={product.title} className='card-img-full' />\r\n    <Card.Body>\r\n      <Card.Title>{product.title}</Card.Title>\r\n      <Card.Text>{product.description}</Card.Text>\r\n      <Card.Text>AUD {product.price}</Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nexport default Product;","import React from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(2)\r\n    }\r\n  },\r\n  font1: {\r\n    fontSize: \"1rem\"\r\n  },\r\n  font2: {\r\n    fontSize: \"0.5rem\",\r\n    marginBottom: \"5px\"\r\n  },\r\n  font3: {\r\n    fontSize: \"1.5rem\"\r\n  }\r\n}));\r\n\r\nconst CustomizedBadge = ({ noOfItems }) => (\r\n  <div style={{marginBottom: '10px'}}>\r\n    <Badge badgeContent={noOfItems} color=\"primary\" classes={{badge: useStyles().font2}}>\r\n      <Icon name=\"shopping cart\" size=\"big\" />\r\n    </Badge>\r\n  </div>\r\n);\r\n\r\nexport default CustomizedBadge;","import React, { useEffect } from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport { Link, Route, Switch } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Cart from './components/Cart';\nimport Cards from './components/Cards';\nimport Product from './components/Product';\nimport Badge from './components/CartBadge';\n\nconst App = () => {\n  const [products, setProducts] = React.useState([]);\n  const [cart, setCart] = React.useState([]);\n\n  useEffect(() => {\n    queryCart().then(cart => setCart(cart));\n    queryProducts().then(products => setProducts(products));\n  }, []);\n\n  const queryCart = (method = 'GET', body = null, id) => (\n    fetch(`${process.env.REACT_APP_LOCAL_URL}/cart/${id ? id : ''}`, {\n      method,\n      body: body ? JSON.stringify(body) : null,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json())\n  );\n\n  const queryProducts = (method = 'GET', body = null) => (\n    fetch(`${process.env.REACT_APP_API_URL}/products`, {\n      method,\n      body: body ? JSON.stringify(body) : null,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }\n    }).then(response => response.json())\n  )\n\n  const addToCart = (product) => {\n    queryCart('POST', product).then(product => setCart(cart.concat(product)));\n  }\n\n  const updateCart = (quantity, product) => {\n    let newCart = [...cart];\n    const index = newCart.findIndex(prod => prod.id === product.id);\n    if (quantity !== 0) {\n      newCart[index].quantity = quantity;\n      queryCart('PATCH', { quantity }, product.id).then(() => setCart(newCart));\n    } else {\n      newCart.splice(index, 1);\n      queryCart('DELETE', null, product.id).then(() => setCart(newCart));\n    };\n  };\n\n  const clearCart = () => {\n    Promise.all(cart.map(product => queryCart('DELETE', null, product.id)))\n      .then(() => setCart([]));\n  }\n\n  if (!products) {\n    return null;\n  }\n\n  return (\n    <div>\n      <div class=\"ui visible left demo vertical inverted sidebar labeled icon menu\">\n        <Link class=\"item\" as={Link} to=\"/\">\n          <i class=\"home icon\"></i>\n          Home\n        </Link>\n        <Link class=\"item\" as={Link} to=\"/products\">\n          <i class=\"block layout icon\"></i>\n          Products\n        </Link>\n        <Link class=\"item\" as={Link} to=\"/cart\">\n          <Badge noOfItems={cart.length} />\n          Cart\n        </Link>\n      </div>\n\n      <div style={{marginLeft: '90px'}}>\n        <Switch>\n          <Route path=\"/\" exact render={() => <Home />} />\n          <Route path=\"/products\" exact render={() => <Cards products={products} cart={cart} addToCart={addToCart} />} />\n          <Route\n            path=\"/products/:id\"\n            render={({ match }) => <Product product={products.find(prod => prod.id === parseInt(match.params.id))} />}\n          />\n          <Route path=\"/cart\" render={() => <Cart cart={cart} updateCart={updateCart} clearCart={clearCart} />} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router> \n      <App />\n    </Router>    \n  </React.StrictMode>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}